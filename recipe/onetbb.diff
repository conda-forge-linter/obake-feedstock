diff --git a/CMakeLists.txt b/CMakeLists.txt
index a55356e..c8b88bf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -166,8 +166,18 @@ if(OBAKE_WITH_LIBBACKTRACE)
     find_package(libbacktrace REQUIRED)
 endif()
 
-# TBB.
-find_package(TBB REQUIRED)
+# TBB. Try to find it first in config mode (supported
+# since version 2021 after the oneTBB rename), and, if this
+# fails, fall back to our own FindTBB.cmake. This is of course
+# not an ideal solution, but it should work until oneTBB
+# becomes widely deployed.
+find_package(TBB QUIET CONFIG)
+if(NOT TBB_FOUND)
+    message(STATUS "TBB not found using config mode, retrying in module mode.")
+    find_package(TBB REQUIRED MODULE)
+else()
+    message(STATUS "TBB found using config mode.")
+endif()
 
 # Depend on DbgEng on WIN32, for the stack trace support.
 if(WIN32)
diff --git a/obake-config.cmake.in b/obake-config.cmake.in
index 26a7567..72b11a0 100644
--- a/obake-config.cmake.in
+++ b/obake-config.cmake.in
@@ -10,7 +10,18 @@ if(${mp++_VERSION} VERSION_LESS @_OBAKE_MIN_MPPP_VERSION@)
 endif()
 find_package(absl REQUIRED)
 include(ObakeFindBoost)
-find_package(TBB REQUIRED)
+# TBB. Try to find it first in config mode (supported
+# since version 2021 after the oneTBB rename), and, if this
+# fails, fall back to our own FindTBB.cmake. This is of course
+# not an ideal solution, but it should work until oneTBB
+# becomes widely deployed.
+find_package(TBB QUIET CONFIG)
+if(NOT TBB_FOUND)
+    message(STATUS "TBB not found using config mode, retrying in module mode.")
+    find_package(TBB REQUIRED MODULE)
+else()
+    message(STATUS "TBB found using config mode.")
+endif()
 if(WIN32)
     find_package(DbgEng REQUIRED)
 endif()
